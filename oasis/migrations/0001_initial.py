# Generated by Django 4.1.3 on 2022-11-10 12:59

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields
import shortuuid.django_fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Costomer',
            fields=[
                ('name', models.CharField(blank=True, max_length=200, null=True, verbose_name='Supplier Name')),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region='TZ', verbose_name='Phone Number')),
                ('location', models.TextField(blank=True, verbose_name='Location')),
                ('created_date', models.DateField(auto_now=True, verbose_name='Created date')),
                ('costomer_id', shortuuid.django_fields.ShortUUIDField(alphabet='1234567490', length=4, max_length=4, prefix='', primary_key=True, serialize=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Medicine',
            fields=[
                ('medicine_id', shortuuid.django_fields.ShortUUIDField(alphabet='1234567490', length=5, max_length=5, prefix='', primary_key=True, serialize=False, unique=True)),
                ('medicine_name', models.CharField(blank=True, max_length=250, null=True)),
                ('retail_price', models.IntegerField(default=0, verbose_name='Retail Price')),
                ('wholesale_price', models.IntegerField(default=0, verbose_name='Wholesale Price')),
                ('buying_price', models.IntegerField(default=0, null=True, verbose_name='Price')),
                ('quantity_instock', models.IntegerField(blank=True, default=0, null=True, verbose_name='Quantity In Stock')),
            ],
            options={
                'verbose_name': 'Medicine',
                'verbose_name_plural': 'Medicine',
            },
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True, verbose_name='Account Name')),
                ('type_of', models.CharField(blank=True, max_length=200, null=True, verbose_name='Type')),
                ('account_no', models.CharField(blank=True, max_length=200, null=True, verbose_name='Account Number')),
                ('created_date', models.DateField(auto_now=True, verbose_name='Created date')),
            ],
        ),
        migrations.CreateModel(
            name='Phamacy',
            fields=[
                ('phamacy_id', shortuuid.django_fields.ShortUUIDField(alphabet='1234567490', length=4, max_length=4, prefix='', primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(blank=True, max_length=200, null=True, verbose_name='Supplier Name')),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region='TZ', verbose_name='Phone Number')),
                ('location', models.TextField(blank=True, verbose_name='Location')),
                ('tin_number', models.CharField(blank=True, max_length=200, null=True, verbose_name='TIN NUMBER')),
            ],
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('stock_name', models.CharField(blank=True, max_length=250, null=True)),
                ('invoice_number', models.CharField(blank=True, max_length=250, null=True, verbose_name='Invoice Number')),
                ('entry_date', models.DateField(verbose_name='Entry Date')),
                ('stock_id', shortuuid.django_fields.ShortUUIDField(alphabet='1234567490', length=4, max_length=5, prefix='', primary_key=True, serialize=False, unique=True)),
                ('payment_mode', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='oasis.paymentmethod')),
            ],
            options={
                'verbose_name': 'Stock',
                'verbose_name_plural': 'Stocks',
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('name', models.CharField(blank=True, max_length=200, null=True, verbose_name='Supplier Name')),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region='TZ', verbose_name='Phone Number')),
                ('location', models.TextField(blank=True, verbose_name='Location')),
                ('supplier_id', shortuuid.django_fields.ShortUUIDField(alphabet='1234567490', length=4, max_length=4, prefix='', primary_key=True, serialize=False, unique=True)),
                ('created_date', models.DateField(auto_now=True, verbose_name='Created date')),
            ],
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True, verbose_name='Unit Name')),
            ],
        ),
        migrations.CreateModel(
            name='Stock_Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=0, verbose_name='Quantity')),
                ('buying_price', models.IntegerField(default=0, verbose_name='Buying Price')),
                ('manufacture_date', models.DateField(verbose_name='Manufacture Date')),
                ('expire_date', models.DateField(verbose_name='Expire Date')),
                ('entry_date', models.DateField(auto_now=True, verbose_name='Entry Date')),
                ('batch_no', models.CharField(blank=True, max_length=250, null=True, verbose_name='Batch Number')),
                ('quantity_remained', models.IntegerField(verbose_name='Quantity Remained')),
                ('medicine', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='oasis.medicine')),
                ('stock', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='oasis.stock')),
                ('unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='oasis.unit')),
            ],
            options={
                'verbose_name': 'Stock Product',
                'verbose_name_plural': 'Stock Product',
            },
        ),
        migrations.AddField(
            model_name='stock',
            name='supplier',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='oasis.supplier'),
        ),
        migrations.CreateModel(
            name='Sales',
            fields=[
                ('sold_date', models.DateField(auto_now=True, verbose_name='Sold Date')),
                ('sale_id', shortuuid.django_fields.ShortUUIDField(alphabet='1234567490', length=4, max_length=4, prefix='', primary_key=True, serialize=False, unique=True)),
                ('invoice_number', shortuuid.django_fields.ShortUUIDField(alphabet='1234567490', length=6, max_length=6, prefix='')),
                ('costomer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='oasis.costomer')),
            ],
        ),
        migrations.CreateModel(
            name='Sale_Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(verbose_name='Quantity')),
                ('sold_date', models.DateField(auto_now=True, verbose_name='Sold Date')),
                ('batch_no', models.CharField(blank=True, max_length=200, null=True, verbose_name='Batch Number')),
                ('is_checkouted', models.BooleanField(default=False)),
                ('medicine_stock', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='oasis.stock_product')),
                ('sale', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='oasis.sales')),
            ],
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medicine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='oasis.medicine')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('full_name', models.CharField(blank=True, max_length=250, null=True, verbose_name='Full Name')),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region='TZ', unique=True, verbose_name='Phone Number')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True, verbose_name='Email Address')),
                ('is_cashier', models.BooleanField(default=False, verbose_name='Cashier')),
                ('is_verified', models.BooleanField(default=False, verbose_name='Verified')),
                ('key', models.CharField(blank=True, default='H5YEZAJPVCJNZMEDEZUUBS2CFO7L4XNF', max_length=200, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
    ]
